{"ast":null,"code":"var _jsxFileName = \"/Users/dsgueglia/cloudAc/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Card, Grid, Image, Icon, Modal, Button, Header } from 'semantic-ui-react';\nimport './App.css';\nimport useSWR from 'swr';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n\n  const {\n    data,\n    error\n  } = useSWR('https://rickandmortyapi.com/api/character', fetcher);\n  const [open, setOpen] = React.useState(false);\n  const [character, setCharacter] = React.useState();\n\n  const renderModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"medium\",\n          src: character.image,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Default Profile Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"We've found the following gravatar image associated with your e-mail address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Is it okay to use this photo?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Nope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Yep, that's me\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: () => setOpen(false),\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderCard = character => {\n    return /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        link: true,\n        onClick: () => {\n          setOpen(true);\n          setCharacter(character);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: character.image,\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Status: \", character.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Species: \", character.species]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Gender: \", character.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Origin: \", character.origin.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"location: \", character.location.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), character.episode.length, \" Episodes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 54\n      }, this)\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  };\n\n  if (data && Object.keys(data).length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: \" RICK AND MORTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), character & renderModal(), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"cardWrapper\",\n        children: data.results.map(character => renderCard(character))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 15\n  }, this);\n}\n\n_s(App, \"ffYqDmru0nFkgMeYivGNUSqr5j0=\", false, function () {\n  return [useSWR];\n});\n\n_c = App;\n\nfunction Episode(episode) {\n  _s2();\n\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n\n  const {\n    data,\n    error\n  } = useSWR(episode.episode || \"\", fetcher);\n  if (data && Object.keys(data).length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Episode, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});\n\n_c2 = Episode;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Episode\");","map":{"version":3,"sources":["/Users/dsgueglia/cloudAc/src/App.js"],"names":["Card","Grid","Image","Icon","Modal","Button","Header","useSWR","React","App","fetcher","args","fetch","then","res","json","data","error","open","setOpen","useState","character","setCharacter","renderModal","name","image","renderCard","status","species","gender","origin","location","episode","length","id","Object","keys","results","map","Episode"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAAC,2CAAD,EAA8CG,OAA9C,CAA9B;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACY,QAAN,EAAlC;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACxB,wBACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,KAAD,CADxB;AAEE,MAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;AAGE,MAAA,IAAI,EAAED,IAHR;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAA,kBAAeG,SAAS,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,MAApB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAEH,SAAS,CAACI,KAApC;AAA2C,UAAA,OAAO;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD,CAAO,WAAP;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAkBE,QAAC,KAAD,CAAO,OAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,OAAO,EAAE,MAAMN,OAAO,CAAC,KAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,gBADV;AAEE,UAAA,aAAa,EAAC,OAFhB;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAJxB;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD,GAnCD;;AAoCA,QAAMO,UAAU,GAAIL,SAAD,IAAe;AAChC,wBAAO,QAAC,IAAD,CAAM,MAAN;AAAgC,MAAA,KAAK,EAAE,CAAvC;AAAA,6BAA0C,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,IAAI,MAA3B;AAA4B,QAAA,OAAO,EAAE,MAAM;AAAEF,UAAAA,OAAO,CAAC,IAAD,CAAP;AAAeG,UAAAA,YAAY,CAACD,SAAD,CAAZ;AAAyB,SAArF;AAAA,gCAC/C,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,SAAS,CAACI,KAAtB;AAA6B,UAAA,OAAO,MAApC;AAAqC,UAAA,EAAE,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAD+C,eAE/C,QAAC,IAAD,CAAM,OAAN;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcJ,SAAS,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE;AAAA,qCAAcH,SAAS,CAACM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCAAeN,SAAS,CAACO,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,qCAAcP,SAAS,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCAAcR,SAAS,CAACS,MAAV,CAAiBN,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,uCAAgBH,SAAS,CAACU,QAAV,CAAmBP,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF+C,eAgB/C,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,EACuBH,SAAS,CAACW,OAAV,CAAkBC,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C,OAAkBZ,SAAS,CAACa,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AAqBD,GAtBD;;AAuBA,MAAIlB,IAAI,IAAImB,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBiB,MAA9B,EAAsC;AACpC,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGZ,SAAS,GAAEE,WAAW,EAFzB,eAGE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBACGP,IAAI,CAACqB,OAAL,CAAaC,GAAb,CAAkBjB,SAAD,IAAeK,UAAU,CAACL,SAAD,CAA1C;AADH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAWK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACN;;GA7EQZ,G;UAEiBF,M;;;KAFjBE,G;;AA+ET,SAAS8B,OAAT,CAAiBP,OAAjB,EAA0B;AAAA;;AACxB,QAAMtB,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAACyB,OAAO,CAACA,OAAR,IAAmB,EAApB,EAAwBtB,OAAxB,CAA9B;AACA,MAAIM,IAAI,IAAImB,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBiB,MAA9B,EACE,oBAAO;AAAA,cAAMjB,IAAI,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IANQe,O;UAEiBhC,M;;;MAFjBgC,O;AAQT,eAAe9B,GAAf","sourcesContent":["import { Card, Grid, Image, Icon, Modal, Button, Header } from 'semantic-ui-react'\nimport './App.css';\nimport useSWR from 'swr'\nimport React from 'react'\nfunction App() {\n  const fetcher = (...args) => fetch(...args).then(res => res.json())\n  const { data, error } = useSWR('https://rickandmortyapi.com/api/character', fetcher)\n  const [open, setOpen] = React.useState(false)\n  const [character, setCharacter] = React.useState()\n\n  const renderModal = () => {\n    return (\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n\n      >\n        <Modal.Header>{character.name}</Modal.Header>\n        <Modal.Content image>\n          <Image size='medium' src={character.image} wrapped />\n          <Modal.Description>\n            <Header>Default Profile Image</Header>\n            <p>\n              We've found the following gravatar image associated with your e-mail\n              address.\n            </p>\n            <p>Is it okay to use this photo?</p>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='black' onClick={() => setOpen(false)}>\n            Nope\n          </Button>\n          <Button\n            content=\"Yep, that's me\"\n            labelPosition='right'\n            icon='checkmark'\n            onClick={() => setOpen(false)}\n            positive\n          />\n        </Modal.Actions>\n      </Modal>\n    )\n\n  }\n  const renderCard = (character) => {\n    return <Grid.Column key={character.id} width={3}><Card className=\"card\" link onClick={() => { setOpen(true); setCharacter(character) }}>\n      <Image src={character.image} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{character.name}</Card.Header>\n        <Card.Meta>\n          <div>Status: {character.status}</div>\n          <div>Species: {character.species}</div>\n          <div>Gender: {character.gender}</div>\n          <div>Origin: {character.origin.name}</div>\n          <div>location: {character.location.name}</div>\n        </Card.Meta>\n\n        {/* <Card.Description>\n          {character.episode.map((episode) => <Episode episode={episode}></Episode>)}\n        </Card.Description> */}\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='info' />{character.episode.length} Episodes\n      </Card.Content>\n    </Card>\n    </Grid.Column >\n  }\n  if (data && Object.keys(data).length) {\n    return (\n      <div className=\"App\">\n        <div className=\"navbar\"> RICK AND MORTY</div>\n        {character &renderModal()}\n        <Grid className=\"cardWrapper\">\n          {data.results.map((character) => renderCard(character))}\n        </Grid>\n      </div>\n    );\n  }\n  else return <div>Loading..</div>\n}\n\nfunction Episode(episode) {\n  const fetcher = (...args) => fetch(...args).then(res => res.json())\n  const { data, error } = useSWR(episode.episode || \"\", fetcher)\n  if (data && Object.keys(data).length)\n    return <div>{data.name}</div>\n  return <div></div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}