{"ast":null,"code":"var _jsxFileName = \"/Users/dsgueglia/cloudAc/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Card, Grid, Image, Icon, Modal, Button, Header, Pagination } from 'semantic-ui-react';\nimport './App.css';\nimport useSWR from 'swr';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n\n  const [pageIndex, setPageIndex] = useState(1);\n  const {\n    data,\n    error\n  } = useSWR(`https://rickandmortyapi.com/api/character?page=${pageIndex}`, fetcher);\n  const [open, setOpen] = React.useState(false);\n  const [character, setCharacter] = useState();\n\n  const renderModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        image: true,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          size: \"medium\",\n          src: character.image,\n          wrapped: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Description, {\n          className: \"modalDescription\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: \"Episodes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: character.episode.map(episode => /*#__PURE__*/_jsxDEV(Episode, {\n              episode: episode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 54\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: () => setOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderCard = character => {\n    return /*#__PURE__*/_jsxDEV(Grid.Column, {\n      width: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        link: true,\n        onClick: () => {\n          setOpen(true);\n          setCharacter(character);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: character.image,\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: character.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Status: \", character.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Species: \", character.species]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Gender: \", character.gender]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Origin: \", character.origin.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"location: \", character.location.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), character.episode.length, \" Episodes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 54\n      }, this)\n    }, character.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  };\n\n  if (data && Object.keys(data).length && !data.error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: \" RICK AND MORTY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), character && renderModal(), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"cardWrapper\",\n        children: data.results.map(character => renderCard(character))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        defaultActivePage: 5,\n        totalPages: data.info.pages,\n        activePage: pageIndex,\n        onPageChange: (event, data) => setPageIndex(data.activePage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 15\n  }, this);\n}\n\n_s(App, \"FKaqngFhO3dKzStiy1Vy5PRbc18=\", false, function () {\n  return [useSWR];\n});\n\n_c = App;\n\nfunction Episode(episode) {\n  _s2();\n\n  const fetcher = (...args) => fetch(...args).then(res => res.json());\n\n  const {\n    data,\n    error\n  } = useSWR(episode.episode || \"\", fetcher);\n  if (data && Object.keys(data).length) return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [data.name, \",\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Episode, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});\n\n_c2 = Episode;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Episode\");","map":{"version":3,"sources":["/Users/dsgueglia/cloudAc/src/App.js"],"names":["Card","Grid","Image","Icon","Modal","Button","Header","Pagination","useSWR","React","useState","App","fetcher","args","fetch","then","res","json","pageIndex","setPageIndex","data","error","open","setOpen","character","setCharacter","renderModal","name","image","episode","map","renderCard","status","species","gender","origin","location","length","id","Object","keys","results","info","pages","event","activePage","Episode"],"mappings":";;;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,MAAjD,EAAyDC,UAAzD,QAA2E,mBAA3E;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAAE,kDAAiDU,SAAU,EAA7D,EAAgEN,OAAhE,CAA9B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,EAA1C;;AAEA,QAAMgB,WAAW,GAAG,MAAM;AACxB,wBACE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAMH,OAAO,CAAC,KAAD,CADxB;AAEE,MAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;AAGE,MAAA,IAAI,EAAED,IAHR;AAAA,8BAME,QAAC,KAAD,CAAO,MAAP;AAAA,kBAAeE,SAAS,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,MAApB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAEH,SAAS,CAACI,KAApC;AAA2C,UAAA,OAAO;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD,CAAO,WAAP;AAAmB,UAAA,SAAS,EAAC,kBAA7B;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAMJ,SAAS,CAACK,OAAV,CAAkBC,GAAlB,CAAuBD,OAAD,iBAAa,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAAnC;AAAN;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE,QAAC,KAAD,CAAO,OAAP;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAsB,UAAA,OAAO,EAAE,MAAMN,OAAO,CAAC,KAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD,GAzBD;;AA0BA,QAAMQ,UAAU,GAAIP,SAAD,IAAe;AAChC,wBAAO,QAAC,IAAD,CAAM,MAAN;AAAgC,MAAA,KAAK,EAAE,CAAvC;AAAA,6BAA0C,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,IAAI,MAA3B;AAA4B,QAAA,OAAO,EAAE,MAAM;AAAED,UAAAA,OAAO,CAAC,IAAD,CAAP;AAAeE,UAAAA,YAAY,CAACD,SAAD,CAAZ;AAAyB,SAArF;AAAA,gCAC/C,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,SAAS,CAACI,KAAtB;AAA6B,UAAA,OAAO,MAApC;AAAqC,UAAA,EAAE,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAD+C,eAE/C,QAAC,IAAD,CAAM,OAAN;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,sBAAcJ,SAAS,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE;AAAA,qCAAcH,SAAS,CAACQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,sCAAeR,SAAS,CAACS,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,qCAAcT,SAAS,CAACU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCAAcV,SAAS,CAACW,MAAV,CAAiBR,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,uCAAgBH,SAAS,CAACY,QAAV,CAAmBT,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF+C,eAa/C,QAAC,IAAD,CAAM,OAAN;AAAc,UAAA,KAAK,MAAnB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,EACuBH,SAAS,CAACK,OAAV,CAAkBQ,MADzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAb+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C,OAAkBb,SAAS,CAACc,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAP;AAkBD,GAnBD;;AAoBA,MAAKlB,IAAI,IAAImB,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBiB,MAA3B,IAAsC,CAACjB,IAAI,CAACC,KAAhD,EAAuD;AACrD,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGG,SAAS,IAAIE,WAAW,EAF3B,eAGE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBACGN,IAAI,CAACqB,OAAL,CAAaX,GAAb,CAAkBN,SAAD,IAAeO,UAAU,CAACP,SAAD,CAA1C;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAME,QAAC,UAAD;AAAY,QAAA,iBAAiB,EAAE,CAA/B;AAAkC,QAAA,UAAU,EAAEJ,IAAI,CAACsB,IAAL,CAAUC,KAAxD;AAA+D,QAAA,UAAU,EAAEzB,SAA3E;AAAsF,QAAA,YAAY,EAAE,CAAC0B,KAAD,EAAQxB,IAAR,KAAiBD,YAAY,CAACC,IAAI,CAACyB,UAAN;AAAjI;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD,MAYK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACN;;GAlEQlC,G;UAGiBH,M;;;KAHjBG,G;;AAoET,SAASmC,OAAT,CAAiBjB,OAAjB,EAA0B;AAAA;;AACxB,QAAMjB,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBb,MAAM,CAACqB,OAAO,CAACA,OAAR,IAAmB,EAApB,EAAwBjB,OAAxB,CAA9B;AACA,MAAIQ,IAAI,IAAImB,MAAM,CAACC,IAAP,CAAYpB,IAAZ,EAAkBiB,MAA9B,EACE,oBAAO;AAAA,eAAOjB,IAAI,CAACO,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IANQmB,O;UAEiBtC,M;;;MAFjBsC,O;AAQT,eAAenC,GAAf","sourcesContent":["import { Card, Grid, Image, Icon, Modal, Button, Header, Pagination } from 'semantic-ui-react'\nimport './App.css';\nimport useSWR from 'swr'\nimport React, { useState } from 'react'\nfunction App() {\n  const fetcher = (...args) => fetch(...args).then(res => res.json())\n  const [pageIndex, setPageIndex] = useState(1);\n  const { data, error } = useSWR(`https://rickandmortyapi.com/api/character?page=${pageIndex}`, fetcher)\n  const [open, setOpen] = React.useState(false)\n  const [character, setCharacter] = useState()\n\n  const renderModal = () => {\n    return (\n      <Modal\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n\n      >\n        <Modal.Header>{character.name}</Modal.Header>\n        <Modal.Content image>\n          <Image size='medium' src={character.image} wrapped />\n          <Modal.Description className=\"modalDescription\">\n            <Header>Episodes:</Header>\n            <div>{character.episode.map((episode) => <Episode episode={episode}></Episode>)}</div>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='black' onClick={() => setOpen(false)}>\n            Close\n          </Button>\n\n        </Modal.Actions>\n      </Modal>\n    )\n\n  }\n  const renderCard = (character) => {\n    return <Grid.Column key={character.id} width={3}><Card className=\"card\" link onClick={() => { setOpen(true); setCharacter(character) }}>\n      <Image src={character.image} wrapped ui={false} />\n      <Card.Content>\n        <Card.Header>{character.name}</Card.Header>\n        <Card.Meta>\n          <div>Status: {character.status}</div>\n          <div>Species: {character.species}</div>\n          <div>Gender: {character.gender}</div>\n          <div>Origin: {character.origin.name}</div>\n          <div>location: {character.location.name}</div>\n        </Card.Meta>\n\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name='info' />{character.episode.length} Episodes\n      </Card.Content>\n    </Card>\n    </Grid.Column >\n  }\n  if ((data && Object.keys(data).length) && !data.error) {\n    return (\n      <div className=\"App\">\n        <div className=\"navbar\"> RICK AND MORTY</div>\n        {character && renderModal()}\n        <Grid className=\"cardWrapper\">\n          {data.results.map((character) => renderCard(character))}\n        </Grid>\n        <Pagination defaultActivePage={5} totalPages={data.info.pages} activePage={pageIndex} onPageChange={(event, data) => setPageIndex(data.activePage)} />\n      </div>\n    );\n  }\n  else return <div>Loading..</div>\n}\n\nfunction Episode(episode) {\n  const fetcher = (...args) => fetch(...args).then(res => res.json())\n  const { data, error } = useSWR(episode.episode || \"\", fetcher)\n  if (data && Object.keys(data).length)\n    return <span>{data.name},</span>\n  return <div></div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}